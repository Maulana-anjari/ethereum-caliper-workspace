version: "3.8"

services:
  postgreskripsi:
    image: postgres:17-alpine
    container_name: postgreskripsi
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgreskripsi}
    ports:
      - "${POSTGRES_HOST_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - geth-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 10

  prometheus:
    image: prom/prometheus:latest
    container_name: caliper_prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "${PROMETHEUS_HOST_PORT:-9090}:9090"
    networks:
      - geth-network

  pushgateway:
    image: prom/pushgateway:latest
    container_name: caliper_pushgateway
    restart: unless-stopped
    ports:
      - "${PUSHGATEWAY_HOST_PORT:-9091}:9091"
    networks:
      - geth-network

  grafana:
    image: grafana/grafana:10.4.2
    container_name: caliper_grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin123}
    ports:
      - "${GRAFANA_HOST_PORT:-3000}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - geth-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: caliper_node_exporter
    restart: unless-stopped
    command:
      - '--path.rootfs=/host'
    pid: host
    network_mode: host
    volumes:
      - /:/host:ro

volumes:
  postgres_data:
    driver: local
  grafana_data:
    driver: local

networks:
  geth-network:
    driver: bridge

# Docker Compose file for PostgreSQL service
version: "3.8"

services:
  # Definisi layanan untuk database PostgreSQL
  postgreskripsi:
    # Menggunakan image resmi PostgreSQL. Menggunakan versi spesifik (misal: 17) lebih disarankan daripada 'latest' untuk reprodusibilitas.
    image: postgres:17-alpine

    # Memberikan nama spesifik pada kontainer sesuai permintaan Anda.
    # Nama ini juga berfungsi sebagai hostname di dalam jaringan Docker.
    container_name: postgreskripsi

    # Kebijakan restart: akan selalu memulai ulang kontainer kecuali jika dihentikan secara manual.
    restart: unless-stopped

    # Mengatur environment variables di dalam kontainer.
    # Nilai diambil dari file .env yang ada di direktori yang sama.
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgreskripsi}

    # Memetakan port internal 5432 dari kontainer ke port 5432 di mesin host Anda.
    # Ini memungkinkan Anda untuk terhubung ke database dari aplikasi di luar Docker (misal: DBeaver, pgAdmin).
    ports:
      - "${POSTGRES_HOST_PORT:-5433}:5432"

    # Menggunakan 'named volume' untuk persistensi data.
    # Ini sangat penting agar data database Anda tidak hilang saat kontainer dihapus atau dibuat ulang.
    volumes:
      - postgres_data:/var/lib/postgresql/data

    # Menghubungkan kontainer ini ke jaringan kustom (opsional, tapi praktik yang baik).
    # Ganti 'geth-network' jika Anda menggunakan nama jaringan lain.
    networks:
      - geth-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 10

# Mendefinisikan 'named volume' yang digunakan oleh layanan di atas.
volumes:
  postgres_data:
    driver: local

# Mendefinisikan jaringan kustom.
networks:
  geth-network:
    driver: bridge
